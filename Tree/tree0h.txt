
#ifndef TREE0_H
#define TREE0_H
template<class T>
struct Node{
 Node(T d, Node<T>* left = 0,Node<T>* right = 0)
   : data(d), leftChild(left), rightChild(right){}

 Node<T>* leftChild;
 T data;
 Node<T>* rightChild;
};
template <class T>
class Tree{
private:
  void Visit(Node<T>*);
  void Insert(Node<T>* &, T &);
  void Preorder(Node<T>*);
  void Inorder(Node<T> *);
  void Postorder(Node<T> *);
public:
  Node<T> *root;
  Tree(){root=0;}
  void Insert(T &value){Insert(root,value);}
  void Preorder(){Preorder(root);}
  void Inorder(){Inorder(root);}
  void Postorder(){Postorder(root);}
  void Levelorder();
};
#endif
